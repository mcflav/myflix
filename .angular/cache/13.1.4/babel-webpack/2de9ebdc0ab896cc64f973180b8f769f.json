{"ast":null,"code":"import { take, exhaustMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./data-storage.service\";\nexport let AuthInterceptorService = /*#__PURE__*/(() => {\n  class AuthInterceptorService {\n    constructor(dataStorageService) {\n      this.dataStorageService = dataStorageService;\n    }\n\n    intercept(req, next) {\n      return this.dataStorageService.user.pipe(take(1), exhaustMap(user => {\n        if (!user) {\n          return next.handle(req);\n        }\n\n        const modifiedReq = req.clone({\n          headers: req.headers.set(\"x-access-token\", user.token)\n        });\n        return next.handle(modifiedReq);\n      }));\n    }\n\n  }\n\n  AuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.DataStorageService));\n  };\n\n  AuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac\n  });\n  return AuthInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}