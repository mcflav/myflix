{"ast":null,"code":"import { Order } from '../models/order.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/subscriber.service\";\nimport * as i3 from \"../services/data-storage.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../alert/alert.component\";\nimport * as i6 from \"../loading-spinner/loading-spinner.component\";\nimport * as i7 from \"@angular/forms\";\nconst _c0 = [\"f\"];\n\nfunction PlansComponent_app_alert_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-alert\", 23);\n    i0.ɵɵlistener(\"close\", function PlansComponent_app_alert_10_Template_app_alert_close_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onHandleError();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"message\", ctx_r0.error);\n  }\n}\n\nfunction PlansComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let PlansComponent = /*#__PURE__*/(() => {\n  class PlansComponent {\n    constructor(route, router, subscriberService, dataStorageService) {\n      this.route = route;\n      this.router = router;\n      this.subscriberService = subscriberService;\n      this.dataStorageService = dataStorageService;\n      this.planType = 'noPlan';\n      this.orderSubmitted = false;\n      this.promoCode = 'ABC';\n      this.error = null;\n      this.isLoading = false;\n      this.getSubscriptions = [];\n      this.today = new Date();\n    }\n\n    ngOnInit() {\n      this.account = {\n        email: this.route.snapshot.params['email'],\n        firstname: this.route.snapshot.params['firstname'],\n        lastname: this.route.snapshot.params['lastname']\n      };\n      this.dataStorageService.autoLogin();\n      this.dataStorageService.fetchSubscription(this.account.email).subscribe(resData => {\n        this.subscriberService.setOrder(resData);\n        this.getSubscriptions = this.subscriberService.getOrders();\n\n        for (let index = 0; index < this.getSubscriptions.length; index++) {\n          if (this.getSubscriptions[index].email === this.account.email) {\n            this.subscriptId = this.getSubscriptions[index]._id;\n            this.currentPlanType = this.getSubscriptions[index].planType;\n            this.currentPlanDate = this.getSubscriptions[index].planDate;\n            console.log(this.subscriptId);\n            console.log(this.currentPlanType);\n            console.log(this.currentPlanDate);\n          }\n        }\n      });\n    }\n\n    onGoToVideos() {\n      const planDateForSix = new Date(this.currentPlanDate);\n      const planDateForOne = new Date(this.currentPlanDate);\n      const planDateForYear = new Date(this.currentPlanDate);\n      this.planDate = new Date();\n      const addSix = planDateForSix.getMonth();\n      const sixMonthExpirationDate = planDateForSix;\n      sixMonthExpirationDate.setMonth(6 + Number(addSix));\n      const addOne = planDateForOne.getMonth();\n      const oneMonthExpirationDate = planDateForOne;\n      oneMonthExpirationDate.setMonth(1 + Number(addOne));\n      const addYear = planDateForYear.getMonth();\n      const oneYearExpirationDate = planDateForYear;\n      oneYearExpirationDate.setMonth(12 + Number(addYear));\n      const planDateinDb = this.currentPlanDate;\n\n      if (this.currentPlanType === \"1month\" && this.today >= oneMonthExpirationDate) {\n        this.error = \"Your 1 month subscription has expired. Please select a plan or select the option not to subscribe to a plan.\";\n      } else if (this.currentPlanType === \"6months\" && this.today >= sixMonthExpirationDate) {\n        this.error = \"Your 6 months subscription has expired. Please select a plan or select the option not to subscribe to a plan.\";\n      } else if (this.currentPlanType === \"1year\" && this.today >= oneYearExpirationDate) {\n        this.error = \"Your 1 year subscription has expired. Please select a plan or select the option not to subscribe to a plan.\";\n      } else if (this.currentPlanType === \"1month\" || this.currentPlanType === \"6months\" || this.currentPlanType === \"1year\") {\n        this.router.navigate(['../gallery', this.account.email, this.account.firstname, this.account.lastname]);\n      } else if (this.currentPlanType === \"noPlan\") {\n        this.error = \"You have not selected a plan for your account. Please select a plan or select not to subscribe to a plan.\";\n      } else {}\n    }\n\n    onSubmit() {\n      this.error = null;\n      this.isLoading = true;\n\n      if (this.planForm.value.promoCode === \"ABC\") {\n        if (this.planType === \"1month\") {\n          this.account.email;\n          this.planCost = 5.00;\n          this.planDiscount = 1.00;\n          this.planDate = new Date();\n          this.planTotal = this.planCost - this.planDiscount;\n        } else if (this.planType === \"6months\") {\n          this.account.email;\n          this.planCost = 30.00;\n          this.planDiscount = 6.00;\n          this.planDate = new Date();\n          this.planTotal = this.planCost - this.planDiscount;\n        } else if (this.planType === \"1year\") {\n          this.account.email;\n          this.planCost = 60.00;\n          this.planDiscount = 12.00;\n          this.planDate = new Date();\n          this.planTotal = this.planCost - this.planDiscount;\n        } else {\n          this.account.email;\n          this.planCost = 0;\n          this.planDiscount = 0;\n          this.planDate = new Date();\n          this.planTotal = this.planCost - this.planDiscount;\n        }\n      } else {\n        if (this.planType === \"1month\") {\n          this.account.email;\n          this.planCost = 5.00;\n          this.planDiscount = 0;\n          this.planDate = new Date();\n          this.planTotal = this.planCost - this.planDiscount;\n        } else if (this.planType === \"6months\") {\n          this.account.email;\n          this.planCost = 30.00;\n          this.planDiscount = 0;\n          this.planDate = new Date();\n          this.planTotal = this.planCost - this.planDiscount;\n        } else if (this.planType === \"1year\") {\n          this.account.email;\n          this.planCost = 60.00;\n          this.planDiscount = 0;\n          this.planDate = new Date();\n          this.planTotal = this.planCost - this.planDiscount;\n        } else {\n          this.account.email;\n          this.planCost = 0;\n          this.planDiscount = 0;\n          this.planDate = new Date();\n          this.planTotal = this.planCost - this.planDiscount;\n        }\n      }\n\n      this.newOrder = new Order(this.planType, this.account.email, Number(this.planCost), Number(this.planDiscount), this.planDate.toString(), Number(this.planTotal));\n      this.subscriberService.addOrder(this.newOrder);\n      const planDateForSix = new Date(this.currentPlanDate);\n      const planDateForOne = new Date(this.currentPlanDate);\n      const planDateForYear = new Date(this.currentPlanDate);\n      const addSix = planDateForSix.getMonth();\n      const sixMonthExpirationDate = planDateForSix;\n      sixMonthExpirationDate.setMonth(6 + Number(addSix));\n      const addOne = planDateForOne.getMonth();\n      const oneMonthExpirationDate = planDateForOne;\n      oneMonthExpirationDate.setMonth(1 + Number(addOne));\n      const addYear = planDateForYear.getMonth();\n      const oneYearExpirationDate = planDateForYear;\n      oneYearExpirationDate.setMonth(12 + Number(addYear));\n      const planDateinDb = this.currentPlanDate;\n\n      if (this.currentPlanType === \"1month\" && this.today < oneMonthExpirationDate) {\n        this.error = \"Your current 1 month plan subscription is still active. \" + \"It expires on \" + oneMonthExpirationDate;\n        this.isLoading = false;\n      } else if (this.currentPlanType === \"6months\" && this.today < sixMonthExpirationDate) {\n        this.error = \"Your current 6 months plan subscription is still active. \" + \"It expires on \" + sixMonthExpirationDate;\n        this.isLoading = false;\n      } else if (this.currentPlanType === \"1year\" && this.today < oneYearExpirationDate) {\n        this.error = \"Your current 1 year plan subscription is still active. \" + \"It expires on \" + oneYearExpirationDate;\n        this.isLoading = false;\n      } else if (this.currentPlanType === \"1month\" && this.today >= oneMonthExpirationDate || this.currentPlanType === \"6months\" && this.today >= sixMonthExpirationDate || this.currentPlanType === \"1Year\" && this.today >= oneYearExpirationDate) {\n        this.UpdateSubscription();\n      } else if (this.currentPlanType === \"noPlan\" && this.planType !== \"noPlan\") {\n        this.UpdateSubscription();\n      } else if (this.planType === \"noPlan\") {\n        this.isLoading = false;\n        this.router.navigate(['../trailers', this.account.email, this.account.firstname, this.account.lastname]);\n        this.orderSubmitted = true;\n      }\n    }\n\n    UpdateSubscription() {\n      this.dataStorageService.updateSubscription(this.subscriptId, this.newOrder).subscribe(resData => {\n        this.isLoading = false;\n\n        if (this.planType === \"noPlan\") {\n          this.router.navigate(['../trailers', this.account.email, this.account.firstname, this.account.lastname]);\n          this.orderSubmitted = true;\n        } else {\n          this.router.navigate(['../gallery', this.account.email, this.account.firstname, this.account.lastname]);\n          this.orderSubmitted = true;\n        }\n      }, errorMessage => {\n        this.isLoading = false;\n        console.log(errorMessage);\n        this.error = errorMessage;\n      });\n    }\n\n    changePlan(e) {\n      this.planType = e.target.value;\n    }\n\n    onHandleError() {\n      this.error = null;\n    }\n\n  }\n\n  PlansComponent.ɵfac = function PlansComponent_Factory(t) {\n    return new (t || PlansComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SubscriberService), i0.ɵɵdirectiveInject(i3.DataStorageService));\n  };\n\n  PlansComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PlansComponent,\n    selectors: [[\"app-plans\"]],\n    viewQuery: function PlansComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.planForm = _t.first);\n      }\n    },\n    decls: 65,\n    vars: 3,\n    consts: [[2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [\"style\", \"color: red\", 3, \"message\", \"close\", 4, \"ngIf\"], [\"style\", \"text-align: center\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"plansMenu\"], [1, \"form-group\"], [\"id\", \"subscription\"], [\"id\", \"level\", 1, \"form-group\"], [\"type\", \"radio\", \"value\", \"1month\", \"name\", \"level\", \"required\", \"\", \"ngModel\", \"\", 3, \"change\"], [\"level\", \"ngModel\"], [\"type\", \"radio\", \"value\", \"6months\", \"name\", \"level\", \"required\", \"\", \"ngModel\", \"\", 3, \"change\"], [\"type\", \"radio\", \"value\", \"1year\", \"name\", \"level\", \"required\", \"\", \"ngModel\", \"\", 3, \"change\"], [\"type\", \"radio\", \"value\", \"noPlan\", \"name\", \"level\", \"required\", \"\", \"ngModel\", \"\", 3, \"change\"], [1, \"noPlans\"], [\"id\", \"access\"], [\"for\", \"promoCode\"], [\"type\", \"text\", \"onfocus\", \"this.value=''\", \"id\", \"promoCode\", \"ngModel\", \"\", \"name\", \"promoCode\"], [\"promoCode\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [2, \"color\", \"red\", 3, \"message\", \"close\"], [2, \"text-align\", \"center\"]],\n    template: function PlansComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\");\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \" Please subscribe to a plan. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h3\");\n        i0.ɵɵelementStart(4, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function PlansComponent_Template_a_click_4_listener() {\n          return ctx.onGoToVideos();\n        });\n        i0.ɵɵtext(5, \"back to videos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"body\");\n        i0.ɵɵelementStart(7, \"div\", 1);\n        i0.ɵɵelementStart(8, \"div\", 2);\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵtemplate(10, PlansComponent_app_alert_10_Template, 1, 1, \"app-alert\", 4);\n        i0.ɵɵtemplate(11, PlansComponent_div_11_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementStart(12, \"form\", 6, 7);\n        i0.ɵɵlistener(\"ngSubmit\", function PlansComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(14, \"h4\");\n        i0.ɵɵelementStart(15, \"u\");\n        i0.ɵɵtext(16, \"NDO Filmz Plans\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"div\", 8);\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵelementStart(20, \"section\", 10);\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵelementStart(22, \"strong\");\n        i0.ɵɵtext(23, \"One Level Subscription - \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \" $5 or $4 with promo code. Pay 6 months in advance - $30 ($24 with promo code) or 1 year in adance - $60 ($48 with promo code) \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"section\", 11);\n        i0.ɵɵelementStart(26, \"input\", 12, 13);\n        i0.ɵɵlistener(\"change\", function PlansComponent_Template_input_change_26_listener($event) {\n          return ctx.changePlan($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \" 1 mo. All Access - $5.00 ($4.00 w/ Promo Code) \");\n        i0.ɵɵelement(29, \"br\");\n        i0.ɵɵelementStart(30, \"input\", 14, 13);\n        i0.ɵɵlistener(\"change\", function PlansComponent_Template_input_change_30_listener($event) {\n          return ctx.changePlan($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(32, \" 6 mo. All Access - $30.00 ($24.00 w/ Promo Code) \");\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelementStart(34, \"input\", 15, 13);\n        i0.ɵɵlistener(\"change\", function PlansComponent_Template_input_change_34_listener($event) {\n          return ctx.changePlan($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(36, \" 1 yr. All Access - $60.00 ($48.00 w/ Promo Code) \");\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelementStart(38, \"input\", 16, 13);\n        i0.ɵɵlistener(\"change\", function PlansComponent_Template_input_change_38_listener($event) {\n          return ctx.changePlan($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \" I do not want to subscribe to a plan today. \");\n        i0.ɵɵelement(41, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"br\");\n        i0.ɵɵelementStart(43, \"div\", 17);\n        i0.ɵɵelementStart(44, \"h2\");\n        i0.ɵɵtext(45, \"** If no plan selected you can only view Trailers **\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"br\");\n        i0.ɵɵelementStart(47, \"section\", 18);\n        i0.ɵɵelementStart(48, \"ul\");\n        i0.ɵɵelementStart(49, \"li\");\n        i0.ɵɵtext(50, \"Unlimited Access to 24/7 tv (scheduled programs).\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"li\");\n        i0.ɵɵtext(52, \"Access to our gallery of the hottest HD features films, and short films.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"li\");\n        i0.ɵɵtext(54, \"Other high quality content from podcast to music videos.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"li\");\n        i0.ɵɵtext(56, \"Premiere new content of new creators not available on other platforms.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(57, \"br\");\n        i0.ɵɵelementStart(58, \"label\", 19);\n        i0.ɵɵtext(59, \"Promo Code: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"input\", 20, 21);\n        i0.ɵɵelement(62, \"br\");\n        i0.ɵɵelementStart(63, \"button\", 22);\n        i0.ɵɵtext(64, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(27);\n\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(52);\n        i0.ɵɵproperty(\"disabled\", _r3.invalid);\n      }\n    },\n    directives: [i4.NgIf, i5.AlertComponent, i6.LoadingSpinnerComponent, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.NgForm, i7.RadioControlValueAccessor, i7.DefaultValueAccessor, i7.RequiredValidator, i7.NgControlStatus, i7.NgModel],\n    styles: [\"header[_ngcontent-%COMP%]{margin-top:0;background-color:#00f;padding-bottom:5px;color:#add8e6}h2[_ngcontent-%COMP%]{margin-top:0;padding-left:25px}h3[_ngcontent-%COMP%]{margin-top:0;background-color:#00f;color:#add8e6;padding-left:1325px}h4[_ngcontent-%COMP%]{color:navy;font-size:x-large;font-weight:bolder;margin-top:20px}p[_ngcontent-%COMP%]{color:#00008b;margin-left:20px;margin-top:20px}label[_ngcontent-%COMP%]{color:#00f;margin-left:20px}button[_ngcontent-%COMP%]{margin-top:20px;margin-left:20px}body[_ngcontent-%COMP%]{background-image:url(ticket.94ff54392318e1e6.png);background-position:center;background-repeat:no-repeat;background-color:red;background-size:cover;margin-top:-10px;opacity:.7}.container[_ngcontent-%COMP%]{margin:0 auto;padding-bottom:45px}.plansMenu[_ngcontent-%COMP%]{border:solid 5px blue;border-radius:35px;background-color:#d3d3d3}.noPlans[_ngcontent-%COMP%]{color:#00f;margin-top:0;padding-left:25px}#access[_ngcontent-%COMP%]{color:#00f}#level[_ngcontent-%COMP%]{margin-left:20px;color:#00f}\"]\n  });\n  return PlansComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}